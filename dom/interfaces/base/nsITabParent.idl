/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


#include "domstubs.idl"

[scriptable, uuid(531b902b-b551-4faa-9814-1a73e8299ac4)]
interface nsITabParent : nsISupports
{
  void injectTouchEvent(in AString aType,
                        [array, size_is(count)] in uint32_t aIdentifiers,
                        [array, size_is(count)] in int32_t aXs,
                        [array, size_is(count)] in int32_t aYs,
                        [array, size_is(count)] in uint32_t aRxs,
                        [array, size_is(count)] in uint32_t aRys,
                        [array, size_is(count)] in float aRotationAngles,
                        [array, size_is(count)] in float aForces,
                        in uint32_t count,
                        in long aModifiers);

  void getChildProcessOffset(out int32_t aCssX, out int32_t aCssY);

  readonly attribute boolean useAsyncPanZoom;

  void setIsDocShellActive(in bool aIsActive);

  /**
   * During interactions where painting performance
   * is more important than scrolling, we may temporarily
   * suppress the displayport. Each enable called must be matched
   * with a disable call.
   */
  void suppressDisplayport(in bool aEnabled);

  readonly attribute uint64_t tabId;

  /**
   * Navigate by key. If aForDocumentNavigation is true, navigate by document.
   * If aForDocumentNavigation is false, navigate by element.
   *
   * If aForward is true, navigate to the first focusable element or document.
   * If aForward is false, navigate to the last focusable element or document.
   */
  void navigateByKey(in bool aForward, in bool aForDocumentNavigation);

  readonly attribute boolean hasContentOpener;
};
